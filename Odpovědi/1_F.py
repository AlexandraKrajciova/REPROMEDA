# -*- coding: utf-8 -*-
"""F_vysledok.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19X1fzuuzm_t7nL1fqtTIGulTF9-ek4zl
"""

import pandas as pd
import matplotlib.pyplot as plt

root_dir = "/content/drive/MyDrive/"
base_dir = root_dir + "Colab Notebooks/"

data_path = base_dir + "REPROMEDA/transfery.csv"
data = pd.read_csv(data_path)

korenovy_adresar = input("Zadajte cestu k hlavnému adresáru: ")
zaciatocny_adresar = korenovy_adresar + input("Zadajte názov zložky s poznámkami Colab: ")
cesta_k_datam = zaciatocny_adresar + input("Zadajte cestu k súboru s dátami (csv): ")

data = pd.read_csv(cesta_k_datam)


# Vytvorenie stlpcov vekovych hodnot
bins = [0, 29, 34, 39, float('inf')]
data['vek_mother'] = pd.to_numeric(data['vek_mother'], errors='coerce')
labels = ['do 29', '30-34', '35-39', '40 a výše']
data['vek_kategorie'] = pd.cut(data['vek_mother'], bins=bins, labels=labels, right=False)

# Odstranenie nan
df_filtr = data.dropna(subset=['vek_mother', 'clinical_gravidity'])

# Vytvorenie tabulky uspesnosti
tabulka_uspesnosti = df_filtr.groupby(['vek_kategorie', 'clinical_gravidity']).size().unstack().div(
    df_filtr.groupby('vek_kategorie').size(), axis=0) * 100

# Pridanie riadku pre vsetky vekove kategorie
tabulka_uspesnosti.loc['všechny věkové kategorie'] = df_filtr.groupby('clinical_gravidity').size() / len(df_filtr) * 100

# preusporiadanie riadkov
tabulka_uspesnosti = tabulka_uspesnosti.reindex(['všechny věkové kategorie'] + labels)

# premenovanie stlpcov a riadkov
tabulka_uspesnosti.columns = ['Neúspěch', 'Úspěch']
tabulka_uspesnosti.index.name = 'Věková skupina'

# Vytvorenie grafu
fig, ax = plt.subplots()
tabulka_uspesnosti['Úspěch'].plot(kind='bar', ax=ax, color='green')
ax.set_xticklabels(tabulka_uspesnosti.index, rotation=0)
ax.set_xlabel('Věková skupina')
ax.set_ylabel('Úspěch (%)')
ax.set_title('Úspěšnost podle věkových skupin')

# vykreslenie grafu
plt.show()


# vytvorenie skupin pro sloupec "genetic_method"
skupiny = {
    'PGT-A': ['PGT-A'],
    'PGT-SR': ['PGT-SR'],
    'Karyomapping': ['Karyomapping'],
    'OneGene': ['OneGene']
}

# Vytvorenie noveho sloupce "skupina_genetic_method"
data['skupina_genetic_method'] = None

# prirradeni hodnot do noveho sloupce dle skupin
for skupina, hodnoty in skupiny.items():
    mask = data['genetic_method'].isin(hodnoty)
    data.loc[mask, 'skupina_genetic_method'] = skupina

# Identifikace hodnot pro skupinu 'Ostatní'
hodnoty_ostatni = set(data['genetic_method'].unique()) - set([hodnota for hodnoty in skupiny.values() for hodnota in hodnoty])

# Vytvoreni skupiny 'Ostatní'
data.loc[data['genetic_method'].isin(hodnoty_ostatni), 'skupina_genetic_method'] = 'Ostatní'

# Vytvorení skupiny 'Prázdné hodnoty' pro NaN hodnoty
data.loc[data['genetic_method'].isna(), 'skupina_genetic_method'] = 'Prázdné hodnoty'

# Serazení sloupcu podle pozadavku
poradi_sloupcu = ['PGT-A', 'PGT-SR', 'Karyomapping', 'OneGene', 'Prázdné hodnoty', 'Ostatní']
tabulka_skupiny_genetic_method = data['skupina_genetic_method'].value_counts().reindex(poradi_sloupcu).reset_index()
tabulka_skupiny_genetic_method.columns = ['skupina_genetic_method', 'Počet']

# pridani radku s sumou vsech hodnot ve sloupci "Počet"
#tabulka_skupiny_genetic_method.loc['Suma'] = tabulka_skupiny_genetic_method['Počet'].sum()

# Vytvoreni grafu
ax = tabulka_skupiny_genetic_method.set_index('skupina_genetic_method').plot(kind='bar', legend=False)
ax.set_ylabel('Počet')
ax.set_xlabel('Genetická metoda')
ax.set_title('Počet výskytů jednotlivých genetických metod')

# vykresleni grafu
plt.show()